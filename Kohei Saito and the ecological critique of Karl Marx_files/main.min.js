(function() {
"use strict";

var fluidBoxModal = {
	init: function () {

	$(function () {
	    $('.modal-fotos').fluidbox();
	});

	}
};

fluidBoxModal.init();
}(window));

(function() {
"use strict";

var hero = {
	init: function () {
		var $slider = $('.is-slider');

		function slickify(){
		    $slider.slick({
				mobileFirst:true,
		        responsive: [
		            {
		                breakpoint: 300,
		                settings: "unslick"
		            },
		            {
		                breakpoint: 1025,
		                settings: {
							slidesToShow: 1,
							slidesToScroll: 1,		    	
					        autoplay: true,
					        autoplaySpeed: 4000,
					        // delay: 1000,
					        speed: 700,
					        dots: false,
					        arrows: false,
					        fade: true,
			  				asNavFor: '.thumbs__nav'
			  			}
		            }
		        ]
		    });
		    $('.thumbs__nav').slick({
			  slidesToShow: 3,
			  slidesToScroll: 1,
			  asNavFor: '.hero.is-slider',
			  focusOnSelect: true,
			  // variableWidth: true,
			  responsive: [
		            {
		                breakpoint: 1025,
		                settings: "unslick"
		            }
		        ]
			});
		}

		slickify();
		$(window).resize(function(){
		    var $windowWidth = $(window).width();
		    if ($windowWidth > 760) {
		        slickify();
		    }
		});
	}
};

hero.init();
}(window));

(function() {
"use strict";

var togglers = {
	$body: $('body'),
	$header: $('.header'),
	$toggler: $('.toggler'),
	
	init: function () {
		this.bindEvents();
	},

	bindEvents: function() {
		var self = this;
		this.$toggler.on('click', function(e) {
			// e.preventDefault();
			self.onClickedToggler(this);
		});
	},

	onClickedToggler: function(el) {
		if ($(el).hasClass('header__toggle') && this.$body.hasClass('open-menu')) {
			this.closeSection();
		} else if ($(el).hasClass('go-to') && this.$body.hasClass('open-menu')) {
				this.closeSection();
		} else {
			var section = $(el).data('show-section');
			this.openSection(section);
		}
	},

	openSection: function(el) {
		this.$body
			.addClass('open-menu')
			.toggleClass('dark-menu', $(el).hasClass('do-dark-menu'));
		this.$header.addClass('is-active');
		$(el).addClass('is-visible');
	},

	closeSection: function () {
		this.$body
			.removeClass('open-menu')
			.removeClass('dark-menu');
		this.$header.removeClass('is-active');
		$('.is-menu.is-visible').removeClass('is-visible');
	}
};

var fixMenu = {
	init: function () {

		$(window).bind('scroll', function () {
		    if ($(window).scrollTop() > 80) {
		    	$('header.header').addClass('fixed');
				$('.menu.is-menu').addClass('fixed');
		    } else {
		    	$('header.header').removeClass('fixed');
		    	$('.menu.is-menu').removeClass('fixed');
		    }
		});		
	}
};

fixMenu.init();
togglers.init();
}(window));

(function() {
"use strict";

var navBar = {
	init: function () {

	var element = document.documentElement,
		body = document.body,
		scrollTop = 'scrollTop',
		scrollHeight = 'scrollHeight',
		progress = document.querySelector('.progress-bar'),
		scroll;

	document.addEventListener('scroll', function() {
		scroll = (element[scrollTop]||body[scrollTop]) / ((element[scrollHeight]||body[scrollHeight]) - element.clientHeight) * 100;
		progress.style.setProperty('--scroll', scroll + '%');
	}); 

	}
};

navBar.init();
}(window));

(function() {
"use strict";

var scrollPage = {
	init: function () {

		var arrowsDown = $('.spip_note');
		var goDown = $('.go-down');

		arrowsDown.on('click', function() {
		    // On-page links
			if (
				location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') 
				&& 
				location.hostname == this.hostname
			) {
				// Figure out element to scroll to
				var target = $(this.hash);
				target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
				// Does a scroll target exist?
				// event.preventDefault();
				if (target.length) {
				var targetOffset = target.offset().top - 90;
					// Only prevent default if animation is actually gonna happen
					$('html, body').animate({
						scrollTop: targetOffset
					}, 800, function() {
						// Callback after animation
						// Must change focus!
						var $target = $(target);
						// $target.focus();
						if ($target.is(":focus")) { // Checking if the target was focused
							return false;
						} else {
						$target.attr('tabindex','-1'); // Adding tabindex for elements not focusable
						// $target.focus(); // Set focus again
						}
					});
				}
			}
		});

		goDown.on('click', function() {
		    // On-page links
			if (
				location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') 
				&& 
				location.hostname == this.hostname
			) {
				// Figure out element to scroll to
				var target = $(this.hash);
				target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');
				// Does a scroll target exist?
				// event.preventDefault();
				if (target.length) {
				var targetOffset = target.offset().top;
					// Only prevent default if animation is actually gonna happen
					$('html, body').animate({
						scrollTop: targetOffset
					}, 800, function() {});
				}
			}
		});		
	}
};

scrollPage.init();
}(window));

(function() {
"use strict";

var scrollBox = {
	init: function () {

		(function($) {

		/**
		* Copyright 2012, Digital Fusion
		* Licensed under the MIT license.
		* http://teamdf.com/jquery-plugins/license/
		*
		* @author Sam Sehnert
		* @desc A small plugin that checks whether elements are within
		*     the user visible viewport of a web browser.
		*     only accounts for vertical position, not horizontal.
		*/

		$.fn.visible = function(partial) {

			var $t            = $(this),
				$w            = $(window),
				viewTop       = $w.scrollTop(),
				viewBottom    = viewTop + $w.height(),
				_top          = $t.offset().top,
				_bottom       = _top + $t.height(),
				compareTop    = partial === true ? _bottom : _top,
				compareBottom = partial === true ? _top : _bottom;

			return ((compareBottom <= viewBottom) && (compareTop >= viewTop));

		};

		})(jQuery);

		var win = $(window);

		var allMods = $(".scrollbox");

		allMods.each(function(i, el) {
			var el = $(el);
			if (el.visible(true)) {
				el.addClass("already-visible"); 
			} 
		});

		// var $waitlist = $('.on-waitlist');    
		// $(window).on("scroll resize", function(event) {
		// 	$waitlist.each(function(i, el) {
		// 		var $el = $waitlist.eq(i);
		// 		if ($el.visible(true)) {
		// 			$waitlist
		// 			.splice(i, 1);
		// 			$el
		// 			.addClass("come-in")
		// 			.removeClass('on-waitlist');
		// 		} 
		// 	});
		// });

		win.scroll(function(event) {

			allMods.each(function(i, el) {
				var el = $(el);
				if (el.visible(true)) {
					el.addClass("come-in"); 
				} 
			});

		});

	}
};

scrollBox.init();
}(window));

function check() {
    if(document.forms["my_form"]["recherche"].value == "")
        document.forms["my_form"]["recherche"].value = " ";

	if(document.forms["my_form1"]["recherche"].value == "")
        document.forms["my_form1"]["recherche"].value = " ";
}

function clear_form_elements(ele) {
    
	$(ele).find(':input').each(function() {
		switch(this.type) {
			case 'search':
				$(this).val(' ');
				break;
		}
	});

	$('input:not(form input)').each(function() {
		switch(this.type) {
			case 'radio':
				this.checked = false;
		}
	});

}

/*Desplegable reproductor de voz*/
$( document ).ready(function() {
$('#lector-boton').on('click', () => {
  $('.reproductor-voz').toggleClass('active');
 
 
})
 
});

function generarAudio(id_article) {
//document.getElementById("reproductorVoz").innerHTML = id_article;
 
fetch('/spip.php?page=mod_articulo_generar_audio&id_article='.concat(id_article), {
  method: 'POST',
  body: id_article // your FormData
})
	.then((response) => {
	  return response.text();
	})
	.then((html) => {
	  document.getElementById("reproductorVoz").innerHTML = html
	});
 
 }
 
 function mostrarBoton(id_article) {
 
document.getElementById("reproductorVoz").innerHTML = '<source src="IMG/mp3/'.concat(id_article).concat('.mp3" type="audio/mpeg"> Your browser does not support the audio element.')
 
 }

//# sourceMappingURL=data:application/json;charset=utf8;base64,
